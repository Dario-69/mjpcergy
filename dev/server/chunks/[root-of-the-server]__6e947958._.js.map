{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///Users/dariusoccansey/Workspace/Matrix/mjp-training-app/src/lib/mongodb.ts"],"sourcesContent":["import mongoose from 'mongoose';\n\nconst MONGODB_URI = process.env.MONGODB_URI!;\n\nif (!MONGODB_URI) {\n  throw new Error('Please define the MONGODB_URI environment variable inside .env.local');\n}\n\n/**\n * Global is used here to maintain a cached connection across hot reloads\n * in development. This prevents connections growing exponentially\n * during API Route usage.\n */\nlet cached = global.mongoose;\n\nif (!cached) {\n  cached = global.mongoose = { conn: null, promise: null };\n}\n\nasync function connectDB() {\n  if (cached.conn) {\n    return cached.conn;\n  }\n\n  if (!cached.promise) {\n    const opts = {\n      bufferCommands: false,\n    };\n\n    cached.promise = mongoose.connect(MONGODB_URI, opts).then((mongoose) => {\n      return mongoose;\n    });\n  }\n\n  try {\n    cached.conn = await cached.promise;\n  } catch (e) {\n    cached.promise = null;\n    throw e;\n  }\n\n  return cached.conn;\n}\n\nexport default connectDB;\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MAAM;AAClB;AAEA;;;;CAIC,GACD,IAAI,SAAS,yDAAO,QAAQ;AAE5B,IAAI,CAAC,QAAQ;IACX,SAAS,yDAAO,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AACzD;AAEA,eAAe;IACb,IAAI,OAAO,IAAI,EAAE;QACf,OAAO,OAAO,IAAI;IACpB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,MAAM,OAAO;YACX,gBAAgB;QAClB;QAEA,OAAO,OAAO,GAAG,oHAAQ,CAAC,OAAO,CAAC,aAAa,MAAM,IAAI,CAAC,CAAC;YACzD,OAAO;QACT;IACF;IAEA,IAAI;QACF,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IACpC,EAAE,OAAO,GAAG;QACV,OAAO,OAAO,GAAG;QACjB,MAAM;IACR;IAEA,OAAO,OAAO,IAAI;AACpB;uCAEe","debugId":null}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":["file:///Users/dariusoccansey/Workspace/Matrix/mjp-training-app/src/models/User.ts"],"sourcesContent":["import mongoose, { Schema, Document } from 'mongoose';\n\nexport interface IUser extends Document {\n  email: string;\n  name: string;\n  password: string;\n  role: 'responsable' | 'membre';\n  isActive: boolean;\n  department?: mongoose.Types.ObjectId;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nconst UserSchema = new Schema<IUser>({\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n    lowercase: true,\n    trim: true,\n  },\n  name: {\n    type: String,\n    required: true,\n    trim: true,\n  },\n  password: {\n    type: String,\n    required: true,\n  },\n  role: {\n    type: String,\n    enum: ['responsable', 'membre'],\n    required: true,\n  },\n  isActive: {\n    type: Boolean,\n    default: true,\n  },\n  department: {\n    type: Schema.Types.ObjectId,\n    ref: 'Department',\n  },\n}, {\n  timestamps: true,\n});\n\nexport default mongoose.models.User || mongoose.model<IUser>('User', UserSchema);\n"],"names":[],"mappings":";;;;AAAA;;AAaA,MAAM,aAAa,IAAI,mHAAM,CAAQ;IACnC,OAAO;QACL,MAAM;QACN,UAAU;QACV,QAAQ;QACR,WAAW;QACX,MAAM;IACR;IACA,MAAM;QACJ,MAAM;QACN,UAAU;QACV,MAAM;IACR;IACA,UAAU;QACR,MAAM;QACN,UAAU;IACZ;IACA,MAAM;QACJ,MAAM;QACN,MAAM;YAAC;YAAe;SAAS;QAC/B,UAAU;IACZ;IACA,UAAU;QACR,MAAM;QACN,SAAS;IACX;IACA,YAAY;QACV,MAAM,mHAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,KAAK;IACP;AACF,GAAG;IACD,YAAY;AACd;uCAEe,oHAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,oHAAQ,CAAC,KAAK,CAAQ,QAAQ","debugId":null}},
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":["file:///Users/dariusoccansey/Workspace/Matrix/mjp-training-app/src/app/api/users/%5Bid%5D/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nimport connectDB from \"@/lib/mongodb\";\nimport User from \"@/models/User\";\nimport bcrypt from \"bcryptjs\";\n\nexport async function GET(\n  request: NextRequest,\n  { params }: { params: { id: string } }\n) {\n  try {\n    await connectDB();\n\n    const user = await User.findById(params.id)\n      .populate('department', 'name description')\n      .select('-password');\n\n    if (!user) {\n      return NextResponse.json(\n        { message: \"Utilisateur non trouvé\" },\n        { status: 404 }\n      );\n    }\n\n    return NextResponse.json(user);\n  } catch (error) {\n    console.error(\"Erreur lors de la récupération de l'utilisateur:\", error);\n    return NextResponse.json(\n      { message: \"Erreur interne du serveur\" },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function PUT(\n  request: NextRequest,\n  { params }: { params: { id: string } }\n) {\n  try {\n    const { name, email, role, isActive, department, password } = await request.json();\n\n    await connectDB();\n\n    const user = await User.findById(params.id);\n    if (!user) {\n      return NextResponse.json(\n        { message: \"Utilisateur non trouvé\" },\n        { status: 404 }\n      );\n    }\n\n    // Mettre à jour les champs\n    if (name) user.name = name;\n    if (email) user.email = email;\n    if (role) user.role = role;\n    if (typeof isActive === 'boolean') user.isActive = isActive;\n    if (department) user.department = department;\n    if (password) {\n      user.password = await bcrypt.hash(password, 12);\n    }\n\n    await user.save();\n\n    // Retourner l'utilisateur mis à jour sans le mot de passe\n    const updatedUser = await User.findById(params.id)\n      .populate('department', 'name description')\n      .select('-password');\n\n    return NextResponse.json(updatedUser);\n  } catch (error) {\n    console.error(\"Erreur lors de la mise à jour de l'utilisateur:\", error);\n    return NextResponse.json(\n      { message: \"Erreur interne du serveur\" },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function DELETE(\n  request: NextRequest,\n  { params }: { params: { id: string } }\n) {\n  try {\n    await connectDB();\n\n    const user = await User.findById(params.id);\n    if (!user) {\n      return NextResponse.json(\n        { message: \"Utilisateur non trouvé\" },\n        { status: 404 }\n      );\n    }\n\n    // Désactiver l'utilisateur au lieu de le supprimer\n    user.isActive = false;\n    await user.save();\n\n    return NextResponse.json({ message: \"Utilisateur désactivé\" });\n  } catch (error) {\n    console.error(\"Erreur lors de la suppression de l'utilisateur:\", error);\n    return NextResponse.json(\n      { message: \"Erreur interne du serveur\" },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;;;;;AAEO,eAAe,IACpB,OAAoB,EACpB,EAAE,MAAM,EAA8B;IAEtC,IAAI;QACF,MAAM,IAAA,kIAAS;QAEf,MAAM,OAAO,MAAM,kIAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,EACvC,QAAQ,CAAC,cAAc,oBACvB,MAAM,CAAC;QAEV,IAAI,CAAC,MAAM;YACT,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;YAAyB,GACpC;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,gJAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,oDAAoD;QAClE,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,SAAS;QAA4B,GACvC;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe,IACpB,OAAoB,EACpB,EAAE,MAAM,EAA8B;IAEtC,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,MAAM,QAAQ,IAAI;QAEhF,MAAM,IAAA,kIAAS;QAEf,MAAM,OAAO,MAAM,kIAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;QAC1C,IAAI,CAAC,MAAM;YACT,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;YAAyB,GACpC;gBAAE,QAAQ;YAAI;QAElB;QAEA,2BAA2B;QAC3B,IAAI,MAAM,KAAK,IAAI,GAAG;QACtB,IAAI,OAAO,KAAK,KAAK,GAAG;QACxB,IAAI,MAAM,KAAK,IAAI,GAAG;QACtB,IAAI,OAAO,aAAa,WAAW,KAAK,QAAQ,GAAG;QACnD,IAAI,YAAY,KAAK,UAAU,GAAG;QAClC,IAAI,UAAU;YACZ,KAAK,QAAQ,GAAG,MAAM,8IAAM,CAAC,IAAI,CAAC,UAAU;QAC9C;QAEA,MAAM,KAAK,IAAI;QAEf,0DAA0D;QAC1D,MAAM,cAAc,MAAM,kIAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,EAC9C,QAAQ,CAAC,cAAc,oBACvB,MAAM,CAAC;QAEV,OAAO,gJAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mDAAmD;QACjE,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,SAAS;QAA4B,GACvC;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe,OACpB,OAAoB,EACpB,EAAE,MAAM,EAA8B;IAEtC,IAAI;QACF,MAAM,IAAA,kIAAS;QAEf,MAAM,OAAO,MAAM,kIAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;QAC1C,IAAI,CAAC,MAAM;YACT,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;YAAyB,GACpC;gBAAE,QAAQ;YAAI;QAElB;QAEA,mDAAmD;QACnD,KAAK,QAAQ,GAAG;QAChB,MAAM,KAAK,IAAI;QAEf,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAwB;IAC9D,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mDAAmD;QACjE,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,SAAS;QAA4B,GACvC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}