{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///Users/dariusoccansey/Workspace/Matrix/mjp-training-app/src/lib/mongodb.ts"],"sourcesContent":["import mongoose from 'mongoose';\n\nconst MONGODB_URI = process.env.MONGODB_URI!;\n\nif (!MONGODB_URI) {\n  throw new Error('Please define the MONGODB_URI environment variable inside .env.local');\n}\n\n/**\n * Global is used here to maintain a cached connection across hot reloads\n * in development. This prevents connections growing exponentially\n * during API Route usage.\n */\nlet cached = global.mongoose;\n\nif (!cached) {\n  cached = global.mongoose = { conn: null, promise: null };\n}\n\nasync function connectDB() {\n  if (cached.conn) {\n    return cached.conn;\n  }\n\n  if (!cached.promise) {\n    const opts = {\n      bufferCommands: false,\n    };\n\n    cached.promise = mongoose.connect(MONGODB_URI, opts).then((mongoose) => {\n      return mongoose;\n    });\n  }\n\n  try {\n    cached.conn = await cached.promise;\n  } catch (e) {\n    cached.promise = null;\n    throw e;\n  }\n\n  return cached.conn;\n}\n\nexport default connectDB;\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MAAM;AAClB;AAEA;;;;CAIC,GACD,IAAI,SAAS,yDAAO,QAAQ;AAE5B,IAAI,CAAC,QAAQ;IACX,SAAS,yDAAO,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AACzD;AAEA,eAAe;IACb,IAAI,OAAO,IAAI,EAAE;QACf,OAAO,OAAO,IAAI;IACpB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,MAAM,OAAO;YACX,gBAAgB;QAClB;QAEA,OAAO,OAAO,GAAG,oHAAQ,CAAC,OAAO,CAAC,aAAa,MAAM,IAAI,CAAC,CAAC;YACzD,OAAO;QACT;IACF;IAEA,IAAI;QACF,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IACpC,EAAE,OAAO,GAAG;QACV,OAAO,OAAO,GAAG;QACjB,MAAM;IACR;IAEA,OAAO,OAAO,IAAI;AACpB;uCAEe","debugId":null}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":["file:///Users/dariusoccansey/Workspace/Matrix/mjp-training-app/src/models/Formation.ts"],"sourcesContent":["import mongoose, { Schema, Document } from 'mongoose';\n\nexport interface IVideo {\n  id: string;\n  title: string;\n  description: string;\n  videoId: string; // ID GridFS\n  duration?: number; // en secondes\n  order: number;\n}\n\nexport interface IModule {\n  id: string;\n  title: string;\n  description: string;\n  order: number;\n  videos: IVideo[];\n}\n\nexport interface IFormation extends Document {\n  title: string;\n  description: string;\n  thumbnailUrl?: string;\n  department: mongoose.Types.ObjectId;\n  createdBy: mongoose.Types.ObjectId;\n  modules: IModule[];\n  isArchived: boolean;\n  evaluation?: mongoose.Types.ObjectId;\n  estimatedDuration?: number; // durée totale en minutes\n  difficulty?: 'débutant' | 'intermédiaire' | 'avancé';\n  tags?: string[];\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nconst VideoSchema = new Schema<IVideo>({\n  id: {\n    type: String,\n    required: true,\n  },\n  title: {\n    type: String,\n    required: true,\n    trim: true,\n  },\n  description: {\n    type: String,\n    trim: true,\n  },\n  videoId: {\n    type: String,\n    required: true,\n  },\n  duration: {\n    type: Number,\n  },\n  order: {\n    type: Number,\n    required: true,\n  },\n}, { _id: false });\n\nconst ModuleSchema = new Schema<IModule>({\n  id: {\n    type: String,\n    required: true,\n  },\n  title: {\n    type: String,\n    required: true,\n    trim: true,\n  },\n  description: {\n    type: String,\n    trim: true,\n  },\n  order: {\n    type: Number,\n    required: true,\n  },\n  videos: [VideoSchema],\n}, { _id: false });\n\nconst FormationSchema = new Schema<IFormation>({\n  title: {\n    type: String,\n    required: true,\n    trim: true,\n  },\n  description: {\n    type: String,\n    required: true,\n    trim: true,\n  },\n  thumbnailUrl: {\n    type: String,\n  },\n  department: {\n    type: Schema.Types.ObjectId,\n    ref: 'Department',\n    required: true,\n  },\n  createdBy: {\n    type: Schema.Types.ObjectId,\n    ref: 'User',\n    required: true,\n  },\n  modules: [ModuleSchema],\n  isArchived: {\n    type: Boolean,\n    default: false,\n  },\n  evaluation: {\n    type: Schema.Types.ObjectId,\n    ref: 'Evaluation',\n  },\n  estimatedDuration: {\n    type: Number,\n  },\n  difficulty: {\n    type: String,\n    enum: ['débutant', 'intermédiaire', 'avancé'],\n    default: 'débutant',\n  },\n  tags: [{\n    type: String,\n    trim: true,\n  }],\n}, {\n  timestamps: true,\n});\n\nexport default mongoose.models.Formation || mongoose.model<IFormation>('Formation', FormationSchema);\n"],"names":[],"mappings":";;;;AAAA;;AAmCA,MAAM,cAAc,IAAI,mHAAM,CAAS;IACrC,IAAI;QACF,MAAM;QACN,UAAU;IACZ;IACA,OAAO;QACL,MAAM;QACN,UAAU;QACV,MAAM;IACR;IACA,aAAa;QACX,MAAM;QACN,MAAM;IACR;IACA,SAAS;QACP,MAAM;QACN,UAAU;IACZ;IACA,UAAU;QACR,MAAM;IACR;IACA,OAAO;QACL,MAAM;QACN,UAAU;IACZ;AACF,GAAG;IAAE,KAAK;AAAM;AAEhB,MAAM,eAAe,IAAI,mHAAM,CAAU;IACvC,IAAI;QACF,MAAM;QACN,UAAU;IACZ;IACA,OAAO;QACL,MAAM;QACN,UAAU;QACV,MAAM;IACR;IACA,aAAa;QACX,MAAM;QACN,MAAM;IACR;IACA,OAAO;QACL,MAAM;QACN,UAAU;IACZ;IACA,QAAQ;QAAC;KAAY;AACvB,GAAG;IAAE,KAAK;AAAM;AAEhB,MAAM,kBAAkB,IAAI,mHAAM,CAAa;IAC7C,OAAO;QACL,MAAM;QACN,UAAU;QACV,MAAM;IACR;IACA,aAAa;QACX,MAAM;QACN,UAAU;QACV,MAAM;IACR;IACA,cAAc;QACZ,MAAM;IACR;IACA,YAAY;QACV,MAAM,mHAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,KAAK;QACL,UAAU;IACZ;IACA,WAAW;QACT,MAAM,mHAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,KAAK;QACL,UAAU;IACZ;IACA,SAAS;QAAC;KAAa;IACvB,YAAY;QACV,MAAM;QACN,SAAS;IACX;IACA,YAAY;QACV,MAAM,mHAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,KAAK;IACP;IACA,mBAAmB;QACjB,MAAM;IACR;IACA,YAAY;QACV,MAAM;QACN,MAAM;YAAC;YAAY;YAAiB;SAAS;QAC7C,SAAS;IACX;IACA,MAAM;QAAC;YACL,MAAM;YACN,MAAM;QACR;KAAE;AACJ,GAAG;IACD,YAAY;AACd;uCAEe,oHAAQ,CAAC,MAAM,CAAC,SAAS,IAAI,oHAAQ,CAAC,KAAK,CAAa,aAAa","debugId":null}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":["file:///Users/dariusoccansey/Workspace/Matrix/mjp-training-app/src/models/Department.ts"],"sourcesContent":["import mongoose, { Schema, Document } from 'mongoose';\n\nexport interface IDepartment extends Document {\n  name: string;\n  description: string;\n  referent?: mongoose.Types.ObjectId;\n  isActive: boolean;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nconst DepartmentSchema = new Schema<IDepartment>({\n  name: {\n    type: String,\n    required: true,\n    trim: true,\n  },\n  description: {\n    type: String,\n    required: true,\n    trim: true,\n  },\n  referent: {\n    type: Schema.Types.ObjectId,\n    ref: 'User',\n  },\n  isActive: {\n    type: Boolean,\n    default: true,\n  },\n}, {\n  timestamps: true,\n});\n\nexport default mongoose.models.Department || mongoose.model<IDepartment>('Department', DepartmentSchema);\n"],"names":[],"mappings":";;;;AAAA;;AAWA,MAAM,mBAAmB,IAAI,mHAAM,CAAc;IAC/C,MAAM;QACJ,MAAM;QACN,UAAU;QACV,MAAM;IACR;IACA,aAAa;QACX,MAAM;QACN,UAAU;QACV,MAAM;IACR;IACA,UAAU;QACR,MAAM,mHAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,KAAK;IACP;IACA,UAAU;QACR,MAAM;QACN,SAAS;IACX;AACF,GAAG;IACD,YAAY;AACd;uCAEe,oHAAQ,CAAC,MAAM,CAAC,UAAU,IAAI,oHAAQ,CAAC,KAAK,CAAc,cAAc","debugId":null}},
    {"offset": {"line": 250, "column": 0}, "map": {"version":3,"sources":["file:///Users/dariusoccansey/Workspace/Matrix/mjp-training-app/src/models/User.ts"],"sourcesContent":["import mongoose, { Schema, Document } from 'mongoose';\n\nexport interface IUser extends Document {\n  email: string;\n  name: string;\n  password: string;\n  role: 'responsable' | 'membre';\n  isActive: boolean;\n  department?: mongoose.Types.ObjectId;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nconst UserSchema = new Schema<IUser>({\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n    lowercase: true,\n    trim: true,\n  },\n  name: {\n    type: String,\n    required: true,\n    trim: true,\n  },\n  password: {\n    type: String,\n    required: true,\n  },\n  role: {\n    type: String,\n    enum: ['responsable', 'membre'],\n    required: true,\n  },\n  isActive: {\n    type: Boolean,\n    default: true,\n  },\n  department: {\n    type: Schema.Types.ObjectId,\n    ref: 'Department',\n  },\n}, {\n  timestamps: true,\n});\n\nexport default mongoose.models.User || mongoose.model<IUser>('User', UserSchema);\n"],"names":[],"mappings":";;;;AAAA;;AAaA,MAAM,aAAa,IAAI,mHAAM,CAAQ;IACnC,OAAO;QACL,MAAM;QACN,UAAU;QACV,QAAQ;QACR,WAAW;QACX,MAAM;IACR;IACA,MAAM;QACJ,MAAM;QACN,UAAU;QACV,MAAM;IACR;IACA,UAAU;QACR,MAAM;QACN,UAAU;IACZ;IACA,MAAM;QACJ,MAAM;QACN,MAAM;YAAC;YAAe;SAAS;QAC/B,UAAU;IACZ;IACA,UAAU;QACR,MAAM;QACN,SAAS;IACX;IACA,YAAY;QACV,MAAM,mHAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,KAAK;IACP;AACF,GAAG;IACD,YAAY;AACd;uCAEe,oHAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,oHAAQ,CAAC,KAAK,CAAQ,QAAQ","debugId":null}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"sources":["file:///Users/dariusoccansey/Workspace/Matrix/mjp-training-app/src/app/api/formations/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nimport connectDB from \"@/lib/mongodb\";\nimport Formation from \"@/models/Formation\";\n\nexport async function GET(request: NextRequest) {\n  try {\n    await connectDB();\n\n    const { searchParams } = new URL(request.url);\n    const department = searchParams.get('department');\n    const isArchived = searchParams.get('archived') === 'true';\n\n    let query: any = {};\n    \n    if (department) {\n      query.department = department;\n    }\n    \n    if (isArchived !== null) {\n      query.isArchived = isArchived;\n    }\n\n    const formations = await Formation.find(query)\n      .populate('department', 'name')\n      .populate('createdBy', 'name email')\n      .populate('evaluation', 'questions')\n      .sort({ createdAt: -1 });\n\n    return NextResponse.json(formations);\n  } catch (error) {\n    console.error(\"Erreur lors de la récupération des formations:\", error);\n    return NextResponse.json(\n      { message: \"Erreur interne du serveur\" },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    const { \n      title, \n      description, \n      department, \n      createdBy, \n      modules = [], \n      tags = [],\n      thumbnailUrl\n    } = await request.json();\n\n    // Debug: Log des données reçues\n    console.log('API - Données reçues:', {\n      title: !!title,\n      description: !!description,\n      department: !!department,\n      createdBy: !!createdBy,\n      modulesCount: modules.length\n    });\n\n    if (!title || !description || !department || !createdBy) {\n      console.log('API - Validation échouée:', {\n        title: title || 'MANQUANT',\n        description: description || 'MANQUANT',\n        department: department || 'MANQUANT',\n        createdBy: createdBy || 'MANQUANT'\n      });\n      return NextResponse.json(\n        { message: \"Titre, description, département et créateur sont requis\" },\n        { status: 400 }\n      );\n    }\n\n    if (modules.length === 0) {\n      return NextResponse.json(\n        { message: \"Au moins un module est requis\" },\n        { status: 400 }\n      );\n    }\n\n    await connectDB();\n\n    // Vérifier que le département existe\n    const Department = require(\"@/models/Department\");\n    const departmentExists = await Department.findById(department);\n    if (!departmentExists) {\n      return NextResponse.json(\n        { message: \"Département non trouvé\" },\n        { status: 400 }\n      );\n    }\n\n    // Vérifier que le créateur existe\n    const User = require(\"@/models/User\");\n    const creatorExists = await User.findById(createdBy);\n    if (!creatorExists) {\n      return NextResponse.json(\n        { message: \"Créateur non trouvé\" },\n        { status: 400 }\n      );\n    }\n\n    // Calculer la durée totale estimée\n    const estimatedDuration = modules.reduce((total: number, module: any) => {\n      return total + (module.videos?.reduce((videoTotal: number, video: any) => {\n        return videoTotal + (video.duration || 0);\n      }, 0) || 0);\n    }, 0);\n\n    const formation = new Formation({\n      title,\n      description,\n      thumbnailUrl,\n      department,\n      createdBy,\n      modules: modules.map((module: any) => ({\n        ...module,\n        id: undefined // MongoDB générera un nouvel ID\n      })),\n      tags,\n      estimatedDuration: Math.round(estimatedDuration / 60) // Convertir en minutes\n    });\n\n    await formation.save();\n\n    // Retourner la formation avec les relations peuplées\n    const populatedFormation = await Formation.findById(formation._id)\n      .populate('department', 'name')\n      .populate('createdBy', 'name email')\n      .populate('evaluation', 'questions');\n\n    return NextResponse.json(populatedFormation, { status: 201 });\n  } catch (error) {\n    console.error(\"Erreur lors de la création de la formation:\", error);\n    return NextResponse.json(\n      { message: \"Erreur interne du serveur\" },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}