{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///Users/dariusoccansey/Workspace/Matrix/mjp-training-app/src/lib/mongodb.ts"],"sourcesContent":["import mongoose from 'mongoose';\n\nconst MONGODB_URI = process.env.MONGODB_URI!;\n\nif (!MONGODB_URI) {\n  throw new Error('Please define the MONGODB_URI environment variable inside .env.local');\n}\n\n/**\n * Global is used here to maintain a cached connection across hot reloads\n * in development. This prevents connections growing exponentially\n * during API Route usage.\n */\nlet cached = global.mongoose;\n\nif (!cached) {\n  cached = global.mongoose = { conn: null, promise: null };\n}\n\nasync function connectDB() {\n  if (cached.conn) {\n    return cached.conn;\n  }\n\n  if (!cached.promise) {\n    const opts = {\n      bufferCommands: false,\n    };\n\n    cached.promise = mongoose.connect(MONGODB_URI, opts).then((mongoose) => {\n      return mongoose;\n    });\n  }\n\n  try {\n    cached.conn = await cached.promise;\n  } catch (e) {\n    cached.promise = null;\n    throw e;\n  }\n\n  return cached.conn;\n}\n\nexport default connectDB;\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MAAM;AAClB;AAEA;;;;CAIC,GACD,IAAI,SAAS,yDAAO,QAAQ;AAE5B,IAAI,CAAC,QAAQ;IACX,SAAS,yDAAO,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AACzD;AAEA,eAAe;IACb,IAAI,OAAO,IAAI,EAAE;QACf,OAAO,OAAO,IAAI;IACpB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,MAAM,OAAO;YACX,gBAAgB;QAClB;QAEA,OAAO,OAAO,GAAG,oHAAQ,CAAC,OAAO,CAAC,aAAa,MAAM,IAAI,CAAC,CAAC;YACzD,OAAO;QACT;IACF;IAEA,IAAI;QACF,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IACpC,EAAE,OAAO,GAAG;QACV,OAAO,OAAO,GAAG;QACjB,MAAM;IACR;IAEA,OAAO,OAAO,IAAI;AACpB;uCAEe","debugId":null}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":["file:///Users/dariusoccansey/Workspace/Matrix/mjp-training-app/src/models/User.ts"],"sourcesContent":["import mongoose, { Schema, Document } from 'mongoose';\n\nexport interface IUser extends Document {\n  email: string;\n  name: string;\n  password: string;\n  role: 'responsable' | 'membre';\n  isActive: boolean;\n  department?: mongoose.Types.ObjectId;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nconst UserSchema = new Schema<IUser>({\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n    lowercase: true,\n    trim: true,\n  },\n  name: {\n    type: String,\n    required: true,\n    trim: true,\n  },\n  password: {\n    type: String,\n    required: true,\n  },\n  role: {\n    type: String,\n    enum: ['responsable', 'membre'],\n    required: true,\n  },\n  isActive: {\n    type: Boolean,\n    default: true,\n  },\n  department: {\n    type: Schema.Types.ObjectId,\n    ref: 'Department',\n  },\n}, {\n  timestamps: true,\n});\n\nexport default mongoose.models.User || mongoose.model<IUser>('User', UserSchema);\n"],"names":[],"mappings":";;;;AAAA;;AAaA,MAAM,aAAa,IAAI,mHAAM,CAAQ;IACnC,OAAO;QACL,MAAM;QACN,UAAU;QACV,QAAQ;QACR,WAAW;QACX,MAAM;IACR;IACA,MAAM;QACJ,MAAM;QACN,UAAU;QACV,MAAM;IACR;IACA,UAAU;QACR,MAAM;QACN,UAAU;IACZ;IACA,MAAM;QACJ,MAAM;QACN,MAAM;YAAC;YAAe;SAAS;QAC/B,UAAU;IACZ;IACA,UAAU;QACR,MAAM;QACN,SAAS;IACX;IACA,YAAY;QACV,MAAM,mHAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,KAAK;IACP;AACF,GAAG;IACD,YAAY;AACd;uCAEe,oHAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,oHAAQ,CAAC,KAAK,CAAQ,QAAQ","debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file:///Users/dariusoccansey/Workspace/Matrix/mjp-training-app/src/models/Department.ts"],"sourcesContent":["import mongoose, { Schema, Document } from 'mongoose';\n\nexport interface IDepartment extends Document {\n  name: string;\n  description: string;\n  referent?: mongoose.Types.ObjectId;\n  isActive: boolean;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nconst DepartmentSchema = new Schema<IDepartment>({\n  name: {\n    type: String,\n    required: true,\n    trim: true,\n  },\n  description: {\n    type: String,\n    required: true,\n    trim: true,\n  },\n  referent: {\n    type: Schema.Types.ObjectId,\n    ref: 'User',\n  },\n  isActive: {\n    type: Boolean,\n    default: true,\n  },\n}, {\n  timestamps: true,\n});\n\nexport default mongoose.models.Department || mongoose.model<IDepartment>('Department', DepartmentSchema);\n"],"names":[],"mappings":";;;;AAAA;;AAWA,MAAM,mBAAmB,IAAI,mHAAM,CAAc;IAC/C,MAAM;QACJ,MAAM;QACN,UAAU;QACV,MAAM;IACR;IACA,aAAa;QACX,MAAM;QACN,UAAU;QACV,MAAM;IACR;IACA,UAAU;QACR,MAAM,mHAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,KAAK;IACP;IACA,UAAU;QACR,MAAM;QACN,SAAS;IACX;AACF,GAAG;IACD,YAAY;AACd;uCAEe,oHAAQ,CAAC,MAAM,CAAC,UAAU,IAAI,oHAAQ,CAAC,KAAK,CAAc,cAAc","debugId":null}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":["file:///Users/dariusoccansey/Workspace/Matrix/mjp-training-app/src/app/api/users/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nimport connectDB from \"@/lib/mongodb\";\nimport User from \"@/models/User\";\nimport Department from \"@/models/Department\";\n\nexport async function GET(request: NextRequest) {\n  try {\n    await connectDB();\n\n    const users = await User.find({})\n      .populate('department', 'name')\n      .select('-password')\n      .sort({ createdAt: -1 });\n\n    return NextResponse.json(users);\n  } catch (error) {\n    console.error(\"Erreur lors de la récupération des utilisateurs:\", error);\n    return NextResponse.json(\n      { message: \"Erreur interne du serveur\" },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    const { name, email, password, role, department } = await request.json();\n\n    if (!name || !email || !password || !role) {\n      return NextResponse.json(\n        { message: \"Tous les champs sont requis\" },\n        { status: 400 }\n      );\n    }\n\n    await connectDB();\n\n    // Vérifier si l'utilisateur existe déjà\n    const existingUser = await User.findOne({ email });\n    if (existingUser) {\n      return NextResponse.json(\n        { message: \"Un utilisateur avec cet email existe déjà\" },\n        { status: 400 }\n      );\n    }\n\n    // Vérifier que le département existe (pour les membres)\n    if (role === \"membre\" && department) {\n      const departmentExists = await Department.findById(department);\n      if (!departmentExists) {\n        return NextResponse.json(\n          { message: \"Département introuvable\" },\n          { status: 400 }\n        );\n      }\n    }\n\n    // Créer l'utilisateur\n    const bcrypt = require('bcryptjs');\n    const hashedPassword = await bcrypt.hash(password, 12);\n\n    const user = new User({\n      name,\n      email,\n      password: hashedPassword,\n      role,\n      department: role === \"membre\" ? department : undefined,\n      isActive: role === \"responsable\" ? true : false,\n    });\n\n    await user.save();\n\n    // Retourner l'utilisateur sans le mot de passe\n    const userData = await User.findById(user._id)\n      .populate('department', 'name')\n      .select('-password');\n\n    return NextResponse.json(userData, { status: 201 });\n  } catch (error) {\n    console.error(\"Erreur lors de la création de l'utilisateur:\", error);\n    return NextResponse.json(\n      { message: \"Erreur interne du serveur\" },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;;;;;AAEO,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,MAAM,IAAA,kIAAS;QAEf,MAAM,QAAQ,MAAM,kIAAI,CAAC,IAAI,CAAC,CAAC,GAC5B,QAAQ,CAAC,cAAc,QACvB,MAAM,CAAC,aACP,IAAI,CAAC;YAAE,WAAW,CAAC;QAAE;QAExB,OAAO,gJAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,oDAAoD;QAClE,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,SAAS;QAA4B,GACvC;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,MAAM,QAAQ,IAAI;QAEtE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,YAAY,CAAC,MAAM;YACzC,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;YAA8B,GACzC;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,IAAA,kIAAS;QAEf,wCAAwC;QACxC,MAAM,eAAe,MAAM,kIAAI,CAAC,OAAO,CAAC;YAAE;QAAM;QAChD,IAAI,cAAc;YAChB,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;YAA4C,GACvD;gBAAE,QAAQ;YAAI;QAElB;QAEA,wDAAwD;QACxD,IAAI,SAAS,YAAY,YAAY;YACnC,MAAM,mBAAmB,MAAM,wIAAU,CAAC,QAAQ,CAAC;YACnD,IAAI,CAAC,kBAAkB;gBACrB,OAAO,gJAAY,CAAC,IAAI,CACtB;oBAAE,SAAS;gBAA0B,GACrC;oBAAE,QAAQ;gBAAI;YAElB;QACF;QAEA,sBAAsB;QACtB,MAAM;QACN,MAAM,iBAAiB,MAAM,OAAO,IAAI,CAAC,UAAU;QAEnD,MAAM,OAAO,IAAI,kIAAI,CAAC;YACpB;YACA;YACA,UAAU;YACV;YACA,YAAY,SAAS,WAAW,aAAa;YAC7C,UAAU,SAAS,gBAAgB,OAAO;QAC5C;QAEA,MAAM,KAAK,IAAI;QAEf,+CAA+C;QAC/C,MAAM,WAAW,MAAM,kIAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,EAC1C,QAAQ,CAAC,cAAc,QACvB,MAAM,CAAC;QAEV,OAAO,gJAAY,CAAC,IAAI,CAAC,UAAU;YAAE,QAAQ;QAAI;IACnD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gDAAgD;QAC9D,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,SAAS;QAA4B,GACvC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}