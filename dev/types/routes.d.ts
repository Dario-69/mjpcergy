// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/auth/signin" | "/auth/signup" | "/dashboard/membre" | "/dashboard/membre/departement" | "/dashboard/membre/formations" | "/dashboard/membre/formations/[id]" | "/dashboard/membre/profil" | "/dashboard/membre/resultats" | "/dashboard/responsable" | "/dashboard/responsable/departements" | "/dashboard/responsable/formations" | "/dashboard/responsable/formations/create" | "/dashboard/responsable/membres" | "/test-vimeo"
type AppRouteHandlerRoutes = "/api/auth/login" | "/api/auth/logout" | "/api/auth/refresh" | "/api/auth/register" | "/api/departements" | "/api/departements/[id]" | "/api/evaluation-results" | "/api/evaluation-results/[id]" | "/api/evaluations" | "/api/evaluations/[id]" | "/api/formations" | "/api/formations/[id]" | "/api/users" | "/api/users/[id]" | "/api/videos/[id]" | "/api/videos/[id]/metadata" | "/api/videos/upload"
type PageRoutes = never
type LayoutRoutes = "/" | "/dashboard/membre" | "/dashboard/responsable"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/api/auth/login": {}
  "/api/auth/logout": {}
  "/api/auth/refresh": {}
  "/api/auth/register": {}
  "/api/departements": {}
  "/api/departements/[id]": { "id": string; }
  "/api/evaluation-results": {}
  "/api/evaluation-results/[id]": { "id": string; }
  "/api/evaluations": {}
  "/api/evaluations/[id]": { "id": string; }
  "/api/formations": {}
  "/api/formations/[id]": { "id": string; }
  "/api/users": {}
  "/api/users/[id]": { "id": string; }
  "/api/videos/[id]": { "id": string; }
  "/api/videos/[id]/metadata": { "id": string; }
  "/api/videos/upload": {}
  "/auth/signin": {}
  "/auth/signup": {}
  "/dashboard/membre": {}
  "/dashboard/membre/departement": {}
  "/dashboard/membre/formations": {}
  "/dashboard/membre/formations/[id]": { "id": string; }
  "/dashboard/membre/profil": {}
  "/dashboard/membre/resultats": {}
  "/dashboard/responsable": {}
  "/dashboard/responsable/departements": {}
  "/dashboard/responsable/formations": {}
  "/dashboard/responsable/formations/create": {}
  "/dashboard/responsable/membres": {}
  "/test-vimeo": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/dashboard/membre": never
  "/dashboard/responsable": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
