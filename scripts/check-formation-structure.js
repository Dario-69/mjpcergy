const { initializeApp, cert } = require('firebase-admin/app');
const { getFirestore } = require('firebase-admin/firestore');
require('dotenv').config({ path: '.env.local' });

// Initialize Firebase Admin
const app = initializeApp({
  credential: cert({
    projectId: process.env.FIREBASE_PROJECT_ID,
    clientEmail: process.env.FIREBASE_CLIENT_EMAIL,
    privateKey: process.env.FIREBASE_PRIVATE_KEY?.replace(/\\n/g, '\n'),
  }),
});

const db = getFirestore(app);

async function checkFormationStructure() {
  console.log('üîç V√©rification de la structure des formations...\n');

  try {
    // R√©cup√©rer toutes les formations
    const formationsSnapshot = await db.collection('formations').get();
    
    console.log(`üìö ${formationsSnapshot.docs.length} formation(s) trouv√©e(s)\n`);

    for (const doc of formationsSnapshot.docs) {
      const data = doc.data();
      console.log(`üìñ Formation: ${data.title}`);
      console.log(`   - ID: ${doc.id}`);
      console.log(`   - D√©partement: ${data.departmentId}`);
      console.log(`   - Cr√©√©e par: ${data.createdById}`);
      console.log(`   - Modules: ${data.modules ? data.modules.length : 'Aucun'}`);
      
      if (data.modules && data.modules.length > 0) {
        data.modules.forEach((module, index) => {
          console.log(`     Module ${index + 1}: ${module.title}`);
          console.log(`       - Vid√©os: ${module.videos ? module.videos.length : 'Aucune'}`);
          if (module.videos && module.videos.length > 0) {
            module.videos.forEach((video, videoIndex) => {
              console.log(`         Vid√©o ${videoIndex + 1}: ${video.title}`);
              console.log(`           - ID: ${video.videoId || 'Aucun'}`);
              console.log(`           - Fichier: ${video.file ? 'Oui' : 'Non'}`);
            });
          }
        });
      } else {
        console.log('   ‚ö†Ô∏è  Aucun module trouv√©');
      }
      
      console.log('   ---');
    }

    // V√©rifier les vid√©os
    console.log('\nüé• V√©rification des vid√©os...');
    const videosSnapshot = await db.collection('videos').get();
    console.log(`üìπ ${videosSnapshot.docs.length} vid√©o(s) trouv√©e(s)\n`);

    for (const doc of videosSnapshot.docs) {
      const data = doc.data();
      console.log(`üé¨ Vid√©o: ${data.title}`);
      console.log(`   - ID: ${doc.id}`);
      console.log(`   - Fichier: ${data.fileName}`);
      console.log(`   - Taille: ${data.fileSize} bytes`);
      console.log(`   - URL: ${data.downloadURL ? 'Disponible' : 'Non disponible'}`);
      console.log('   ---');
    }

  } catch (error) {
    console.error('‚ùå Erreur lors de la v√©rification:', error);
  }
}

checkFormationStructure();
